---
description: 
globs: 
alwaysApply: true
---
<ipd_test_phase_system_test_report_template description="IPD流程测试阶段系统测试报告标准模版">
- 文档名称：系统测试报告
- 适用阶段：IPD流程-验证阶段
- 适用范围：软件开发项目
- 输出要求：文档需以markdown格式编写，结构完整，内容详实，命名为"系统测试报告.md"
- 输出目录：输出到系统根目录下doc文件夹中

# 模版结构
1. 文档信息
    - 文档名称
    - 项目名称
    - 产品版本
    - 测试版本
    - 编写人
    - 审核人
    - 测试负责人
    - 测试周期：开始时间-结束时间
    - 编写日期
    - 修订记录
2. 测试概述
    - 测试目的：说明系统测试的目标和意义
    - 测试范围：界定测试的功能边界和覆盖范围
    - 测试策略：采用的测试策略和方法
    - 测试环境：测试执行的环境配置
    - 测试团队：参与测试的人员组成和分工
3. 测试基础信息
    - 3.1 被测系统
        - 系统名称：被测试系统的名称和版本
        - 系统架构：系统的技术架构概述
        - 核心功能：系统的主要功能模块
        - 关键特性：系统的重要特性和指标
    - 3.2 测试依据
        - 需求文档：测试依据的需求规格说明书
        - 设计文档：系统设计和接口设计文档
        - 测试计划：测试计划和测试策略文档
        - 验收标准：系统验收的标准和条件
    - 3.3 测试环境
        - 硬件环境：测试服务器和设备配置
        - 软件环境：操作系统、数据库、中间件等
        - 网络环境：网络拓扑和带宽配置
        - 数据环境：测试数据的准备和配置
4. 测试执行情况
    - 4.1 测试用例执行统计
        - 用例总数：设计的测试用例总数量
        - 执行用例数：实际执行的测试用例数量
        - 通过用例数：测试通过的用例数量
        - 失败用例数：测试失败的用例数量
        - 阻塞用例数：因环境等原因无法执行的用例数量
        - 执行率：测试用例的执行覆盖率
        - 通过率：测试用例的通过率
    - 4.2 功能测试执行情况
        - 模块A测试：具体功能模块的测试情况
            - 测试内容：该模块的测试内容和重点
            - 用例数量：该模块的测试用例数量
            - 执行结果：测试执行的结果统计
            - 发现问题：测试中发现的问题数量和类型
        - 模块B测试：（按相同结构展开其他功能模块）
        - 模块C测试：...
    - 4.3 非功能测试执行情况
        - 性能测试：系统性能测试的执行情况
        - 安全测试：系统安全性测试的结果
        - 兼容性测试：系统兼容性测试的覆盖情况
        - 可用性测试：用户体验和可用性测试结果
        - 可靠性测试：系统稳定性和可靠性测试
5. 缺陷分析
    - 5.1 缺陷统计
        - 缺陷总数：测试发现的缺陷总数量
        - 严重级别分布：按严重程度分类的缺陷分布
            - 致命缺陷：影响系统核心功能的严重缺陷
            - 严重缺陷：影响主要功能的缺陷
            - 一般缺陷：影响次要功能的缺陷
            - 轻微缺陷：界面和易用性缺陷
        - 缺陷类型分布：按缺陷类型分类的统计
            - 功能缺陷：功能实现错误的缺陷
            - 界面缺陷：用户界面相关的缺陷
            - 性能缺陷：系统性能相关的缺陷
            - 兼容性缺陷：兼容性相关的缺陷
            - 安全缺陷：安全漏洞和风险
    - 5.2 缺陷修复情况
        - 已修复缺陷：已经修复并验证通过的缺陷数量
        - 待修复缺陷：尚未修复的缺陷数量
        - 延期修复缺陷：计划延期修复的缺陷
        - 不修复缺陷：确认不需要修复的缺陷
        - 修复率：缺陷修复的完成率
        - 修复周期：缺陷从发现到修复的平均周期
    - 5.3 缺陷分布分析
        - 模块分布：缺陷在各功能模块中的分布情况
        - 发现阶段：缺陷在不同测试阶段的发现分布
        - 严重程度趋势：缺陷严重程度的变化趋势
        - 修复趋势：缺陷修复进度的趋势分析
6. 测试结果分析
    - 6.1 功能测试结果
        - 核心功能：核心业务功能的测试结果评估
        - 辅助功能：辅助功能的测试完成情况
        - 异常处理：异常情况处理的测试结果
        - 边界条件：边界条件测试的覆盖情况
        - 集成测试：模块间集成测试的结果
    - 6.2 性能测试结果
        - 响应时间：系统响应时间的测试结果
        - 吞吐量：系统处理能力的测试数据
        - 并发性能：并发用户访问的性能表现
        - 资源使用：CPU、内存、磁盘等资源使用情况
        - 性能瓶颈：识别出的性能瓶颈和优化建议
    - 6.3 安全测试结果
        - 身份认证：用户认证机制的安全性测试
        - 权限控制：访问权限控制的测试结果
        - 数据安全：数据传输和存储安全测试
        - 输入验证：用户输入验证的安全测试
        - 安全漏洞：发现的安全漏洞和风险评估
    - 6.4 兼容性测试结果
        - 浏览器兼容：不同浏览器的兼容性测试
        - 操作系统兼容：不同操作系统的兼容性
        - 设备兼容：不同设备和分辨率的兼容性
        - 版本兼容：与其他系统版本的兼容性
7. 测试覆盖率分析
    - 7.1 需求覆盖率
        - 需求总数：系统需求的总数量
        - 已测需求：已经测试覆盖的需求数量
        - 覆盖率：需求测试覆盖的百分比
        - 未覆盖需求：尚未测试覆盖的需求列表
    - 7.2 代码覆盖率
        - 语句覆盖率：代码语句的测试覆盖率
        - 分支覆盖率：代码分支的测试覆盖率
        - 函数覆盖率：函数方法的测试覆盖率
        - 路径覆盖率：执行路径的测试覆盖率
    - 7.3 测试场景覆盖
        - 正常场景：正常业务流程的测试覆盖
        - 异常场景：异常情况的测试覆盖
        - 边界场景：边界条件的测试覆盖
        - 压力场景：高负载情况的测试覆盖
8. 质量评估
    - 8.1 质量指标
        - 缺陷密度：单位功能点的缺陷数量
        - 缺陷收敛率：缺陷发现和修复的收敛情况
        - 测试效率：测试执行的效率指标
        - 质量成熟度：系统质量的成熟度评估
    - 8.2 质量风险
        - 高风险区域：质量风险较高的功能模块
        - 风险等级：各风险的等级和影响程度
        - 风险应对：风险的应对措施和建议
        - 遗留风险：测试结束后的遗留质量风险
    - 8.3 质量改进建议
        - 开发改进：对开发过程的改进建议
        - 测试改进：对测试过程的改进建议
        - 流程改进：对整体流程的优化建议
        - 工具改进：对测试工具的改进建议
9. 测试结论
    - 9.1 测试完成情况
        - 测试计划完成度：测试计划的执行完成情况
        - 测试目标达成：测试目标的达成情况评估
        - 测试充分性：测试的充分性和全面性评价
        - 遗留问题：测试结束后的遗留问题
    - 9.2 系统质量评价
        - 功能质量：系统功能实现的质量评价
        - 性能质量：系统性能表现的质量评价
        - 安全质量：系统安全性的质量评价
        - 可靠性质量：系统可靠性的质量评价
        - 易用性质量：系统易用性的质量评价
    - 9.3 发布建议
        - 发布准备度：系统发布准备的成熟度评估
        - 发布风险：系统发布可能面临的风险
        - 发布条件：系统发布需要满足的条件
        - 发布建议：是否建议发布的最终结论
10. 改进建议
    - 测试过程改进：测试过程中发现的改进点
    - 开发质量改进：对开发质量的改进建议
    - 工具平台改进：测试工具和平台的改进建议
    - 团队能力改进：测试团队能力提升建议
11. 附录
    - 11.1 测试数据
        - 测试用例执行明细
        - 缺陷清单详表
        - 性能测试详细数据
        - 测试环境配置清单
    - 11.2 测试工具
        - 使用的测试工具清单
        - 自动化测试脚本
        - 测试数据生成工具
        - 缺陷管理工具配置
    - 11.3 参考文档
        - 测试计划文档
        - 测试用例设计文档
        - 缺陷报告模板
        - 相关标准和规范

# 约束
- 文档必须覆盖上述所有一级标题内容
- 测试数据应真实准确，基于实际测试执行结果
- 缺陷分析应深入到根本原因，不仅描述现象
- 质量评估应客观公正，基于量化指标
- 测试结论应明确具体，为决策提供依据
- 改进建议应具体可行，有明确的实施路径
- 所有统计数据应有明确的来源和计算方法

# 测试报告质量标准
- 数据完整性：测试数据完整准确无遗漏
- 分析深度：问题分析深入到根本原因
- 结论客观：基于事实数据得出客观结论
- 建议可行：改进建议具体可执行
- 格式规范：文档格式规范，结构清晰

# 测试评估标准
- 功能完整性：功能实现是否完整正确
- 性能达标：性能指标是否满足要求
- 安全合规：是否符合安全标准要求
- 质量可控：质量风险是否在可控范围
- 发布就绪：是否具备发布上线条件

# 缺陷严重级别定义
- 致命缺陷：导致系统崩溃或核心功能无法使用
- 严重缺陷：影响主要功能，有替代方案
- 一般缺陷：影响次要功能或用户体验
- 轻微缺陷：界面问题或易用性问题

# 测试通过标准
- 所有致命和严重缺陷已修复
- 一般缺陷修复率达到90%以上
- 核心功能测试通过率100%
- 性能指标满足需求要求
- 安全测试无高风险漏洞

</ipd_test_phase_system_test_report_template>