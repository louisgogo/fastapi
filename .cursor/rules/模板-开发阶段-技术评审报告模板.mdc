---
description: 
globs: 
alwaysApply: true
---
<ipd_development_phase_technical_review_report_template description="IPD流程开发阶段技术评审报告标准模版">
- 文档名称：技术评审报告
- 适用阶段：IPD流程-开发阶段
- 适用范围：软件开发项目
- 输出要求：文档需以markdown格式编写，结构完整，内容详实，命名为"技术评审报告.md"
- 输出目录：输出到系统根目录下doc文件夹中

# 模版结构
1. 文档信息
    - 文档名称
    - 版本号
    - 评审类型：设计评审/代码评审/集成评审/发布评审
    - 项目名称
    - 评审人员：主评审员、评审专家、开发人员
    - 评审日期
    - 修订记录
2. 评审概述
    - 评审目的：说明本次技术评审的目标和意义
    - 评审范围：界定评审的技术边界和覆盖内容
    - 评审标准：列出评审采用的技术标准和规范
    - 评审方法：说明评审采用的方法和流程
3. 项目背景
    - 项目概述：简述项目基本情况和技术特点
    - 开发进度：当前开发阶段和完成情况
    - 技术架构：系统的技术架构概览
    - 关键技术：项目采用的关键技术和创新点
4. 评审内容
    - 4.1 架构设计评审
        - 架构合理性：架构设计是否符合需求和约束
        - 技术选型：技术栈选择是否合适
        - 模块划分：系统模块划分是否清晰合理
        - 接口设计：模块间接口设计是否规范
        - 扩展性：架构的可扩展性和演进能力
    - 4.2 详细设计评审
        - 设计文档：设计文档的完整性和准确性
        - 算法设计：核心算法的正确性和效率
        - 数据结构：数据结构设计的合理性
        - 异常处理：异常情况的处理机制
        - 边界条件：边界条件的考虑和处理
    - 4.3 代码质量评审
        - 编码规范：代码是否符合编码规范
        - 代码结构：代码结构的清晰性和可读性
        - 命名规范：变量、函数、类的命名规范
        - 注释质量：代码注释的完整性和准确性
        - 重复代码：代码重复度和复用性
        - 复杂度：代码复杂度控制
    - 4.4 性能评审
        - 性能指标：关键性能指标的达成情况
        - 性能测试：性能测试的覆盖度和结果
        - 瓶颈分析：性能瓶颈的识别和优化
        - 资源使用：CPU、内存、IO等资源使用情况
        - 并发处理：并发场景的处理能力
    - 4.5 安全评审
        - 安全设计：安全机制的设计和实现
        - 数据安全：数据加密、传输安全等
        - 访问控制：用户认证和权限控制
        - 输入验证：用户输入的验证和过滤
        - 安全漏洞：已知安全漏洞的防护
    - 4.6 可靠性评审
        - 错误处理：错误处理机制的完善性
        - 容错能力：系统的容错和恢复能力
        - 日志记录：日志记录的完整性和规范性
        - 监控告警：系统监控和告警机制
        - 备份恢复：数据备份和恢复方案
5. 测试评审
    - 测试策略：测试策略的完整性和合理性
    - 测试覆盖：测试用例的覆盖度分析
    - 测试结果：各类测试的执行结果
    - 缺陷分析：缺陷的分布和严重程度分析
    - 测试自动化：自动化测试的实施情况
6. 配置管理评审
    - 版本控制：代码版本控制的规范性
    - 构建管理：构建脚本和流程的规范性
    - 环境管理：开发、测试、生产环境的一致性
    - 发布管理：发布流程和回滚机制
    - 配置项管理：配置项的标识和变更控制
7. 文档评审
    - 技术文档：技术文档的完整性和准确性
    - 用户文档：用户手册和操作指南
    - 接口文档：API文档的完整性和准确性
    - 部署文档：部署和运维文档
    - 文档维护：文档的版本控制和更新机制
8. 评审发现问题
    - 8.1 问题分类
        - 严重问题：影响系统功能或安全的重大问题
        - 一般问题：影响代码质量或维护性的问题
        - 建议改进：优化建议和最佳实践建议
    - 8.2 问题清单
        - 问题ID：唯一标识符
        - 问题描述：详细描述发现的问题
        - 问题分类：严重程度分类
        - 责任人：问题修复的责任人
        - 修复建议：问题修复的建议方案
        - 预期完成时间：问题修复的时间计划
9. 风险评估
    - 技术风险：技术实现和架构风险
    - 质量风险：代码质量和测试风险
    - 进度风险：开发进度和里程碑风险
    - 资源风险：人员和环境资源风险
    - 风险应对：风险缓解和应对措施
10. 改进建议
    - 架构优化：架构层面的优化建议
    - 代码优化：代码质量提升建议
    - 流程改进：开发流程的改进建议
    - 工具引入：开发工具和平台的改进建议
    - 团队能力：团队技能提升建议
11. 评审结论
    - 总体评价：对项目技术质量的总体评价
    - 通过标准：评审通过的标准和条件
    - 评审结果：通过/有条件通过/不通过
    - 后续行动：下一步的行动计划和要求
    - 复审安排：如需复审的时间和范围安排
12. 附录
    - 评审检查清单
    - 问题跟踪表
    - 评审会议纪要
    - 相关技术标准和规范
    - 评审工具和方法说明

# 约束
- 文档必须覆盖上述所有一级标题内容
- 问题描述应具体、准确，避免模糊表述
- 每个问题必须指定责任人和修复时间
- 评审结论应基于客观事实和数据
- 风险评估需量化分析，提供具体等级
- 改进建议应具体可行，有明确的实施路径
- 所有发现的问题都应可追踪和验证

# 评审标准
- 功能完整性：功能实现是否完整正确
- 代码质量：代码规范性和可维护性
- 性能指标：是否满足性能要求
- 安全合规：是否符合安全标准
- 文档完整：技术文档是否齐全准确

# 问题分级标准
- 严重问题：影响核心功能、安全漏洞、架构缺陷
- 一般问题：代码规范、性能优化、可维护性
- 建议改进：最佳实践、工具使用、流程优化

# 评审通过标准
- 无严重问题遗留
- 一般问题有明确修复计划
- 关键文档齐全准确
- 测试覆盖率达标
- 性能指标满足要求

# 质量控制
- 评审过程应有记录和跟踪
- 问题修复应有验证和确认
- 评审结果应得到相关方确认
- 经验教训应总结和分享

</ipd_development_phase_technical_review_report_template>