# Docker Compose for AI API Platform
#
# @author malou
# @since 2024-12-19
# Note: AI API平台的Docker Compose配置

version: '3.8'

services:
  # PostgreSQL 数据库
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ai_platform
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: ai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_user -d ai_platform"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # AI API 应用
  api:
    build: .
    environment:
      # 应用配置
      APP_NAME: "AI API Platform"
      APP_VERSION: "1.0.0"
      DEBUG: "false"
      
      # 数据库配置
      DATABASE_URL: "postgresql://ai_user:ai_password@db:5432/ai_platform"
      DB_POOL_SIZE: 10
      DB_MAX_OVERFLOW: 20
      
      # OLLAMA配置
      OLLAMA_HOST: "http://ollama:11434"
      OLLAMA_TIMEOUT: 60
      
      # 日志配置
      LOG_LEVEL: "INFO"
      LOG_FORMAT: "json"
      
      # CORS配置
      ALLOWED_ORIGINS: "*"
      ALLOWED_METHODS: "GET,POST,PUT,DELETE"
      ALLOWED_HEADERS: "*"
      
      # 限流配置
      RATE_LIMIT_ENABLED: "true"
      RATE_LIMIT_REQUESTS: 100
      RATE_LIMIT_WINDOW: 60
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # OLLAMA 模型服务
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
    restart: unless-stopped
    # 如果有GPU，可以启用GPU支持
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Redis (可选，用于缓存和限流)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  ollama_data:
  redis_data:

networks:
  default:
    name: ai_platform_network 